//
// Autogenerated by Thrift Compiler (0.9.2)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

BoxalinoDataIntelligence_GetAuthentication_args = function(args) {
  this.authentication = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
  }
};
BoxalinoDataIntelligence_GetAuthentication_args.prototype = {};
BoxalinoDataIntelligence_GetAuthentication_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new AuthenticationRequest();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetAuthentication_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetAuthentication_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetAuthentication_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetAuthentication_result.prototype = {};
BoxalinoDataIntelligence_GetAuthentication_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Authentication();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetAuthentication_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetAuthentication_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdatePassword_args = function(args) {
  this.authentication = null;
  this.newPassword = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.newPassword !== undefined) {
      this.newPassword = args.newPassword;
    }
  }
};
BoxalinoDataIntelligence_UpdatePassword_args.prototype = {};
BoxalinoDataIntelligence_UpdatePassword_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.newPassword = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdatePassword_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdatePassword_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.newPassword !== null && this.newPassword !== undefined) {
    output.writeFieldBegin('newPassword', Thrift.Type.STRING, 2);
    output.writeString(this.newPassword);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdatePassword_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdatePassword_result.prototype = {};
BoxalinoDataIntelligence_UpdatePassword_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdatePassword_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdatePassword_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetConfigurationVersion_args = function(args) {
  this.authentication = null;
  this.versionType = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.versionType !== undefined) {
      this.versionType = args.versionType;
    }
  }
};
BoxalinoDataIntelligence_GetConfigurationVersion_args.prototype = {};
BoxalinoDataIntelligence_GetConfigurationVersion_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.versionType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetConfigurationVersion_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetConfigurationVersion_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.versionType !== null && this.versionType !== undefined) {
    output.writeFieldBegin('versionType', Thrift.Type.I32, 2);
    output.writeI32(this.versionType);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetConfigurationVersion_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetConfigurationVersion_result.prototype = {};
BoxalinoDataIntelligence_GetConfigurationVersion_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ConfigurationVersion();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetConfigurationVersion_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetConfigurationVersion_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_SetDataSourcesConfiguration_args = function(args) {
  this.authentication = null;
  this.configurationVersion = null;
  this.dataSourcesConfigurationXML = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configurationVersion !== undefined) {
      this.configurationVersion = args.configurationVersion;
    }
    if (args.dataSourcesConfigurationXML !== undefined) {
      this.dataSourcesConfigurationXML = args.dataSourcesConfigurationXML;
    }
  }
};
BoxalinoDataIntelligence_SetDataSourcesConfiguration_args.prototype = {};
BoxalinoDataIntelligence_SetDataSourcesConfiguration_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configurationVersion = new ConfigurationVersion();
        this.configurationVersion.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.dataSourcesConfigurationXML = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_SetDataSourcesConfiguration_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_SetDataSourcesConfiguration_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configurationVersion !== null && this.configurationVersion !== undefined) {
    output.writeFieldBegin('configurationVersion', Thrift.Type.STRUCT, 2);
    this.configurationVersion.write(output);
    output.writeFieldEnd();
  }
  if (this.dataSourcesConfigurationXML !== null && this.dataSourcesConfigurationXML !== undefined) {
    output.writeFieldBegin('dataSourcesConfigurationXML', Thrift.Type.STRING, 3);
    output.writeString(this.dataSourcesConfigurationXML);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_SetDataSourcesConfiguration_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_SetDataSourcesConfiguration_result.prototype = {};
BoxalinoDataIntelligence_SetDataSourcesConfiguration_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_SetDataSourcesConfiguration_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_SetDataSourcesConfiguration_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetFields_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetFields_args.prototype = {};
BoxalinoDataIntelligence_GetFields_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetFields_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetFields_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetFields_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetFields_result.prototype = {};
BoxalinoDataIntelligence_GetFields_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size274 = 0;
        var _rtmp3278;
        this.success = {};
        var _ktype275 = 0;
        var _vtype276 = 0;
        _rtmp3278 = input.readMapBegin();
        _ktype275 = _rtmp3278.ktype;
        _vtype276 = _rtmp3278.vtype;
        _size274 = _rtmp3278.size;
        for (var _i279 = 0; _i279 < _size274; ++_i279)
        {
          if (_i279 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key280 = null;
          var val281 = null;
          key280 = input.readString().value;
          val281 = new Field();
          val281.read(input);
          this.success[key280] = val281;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetFields_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetFields_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter282 in this.success)
    {
      if (this.success.hasOwnProperty(kiter282))
      {
        var viter283 = this.success[kiter282];
        output.writeString(kiter282);
        viter283.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateField_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.fieldId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.fieldId !== undefined) {
      this.fieldId = args.fieldId;
    }
  }
};
BoxalinoDataIntelligence_CreateField_args.prototype = {};
BoxalinoDataIntelligence_CreateField_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.fieldId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateField_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateField_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.fieldId !== null && this.fieldId !== undefined) {
    output.writeFieldBegin('fieldId', Thrift.Type.STRING, 3);
    output.writeString(this.fieldId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateField_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateField_result.prototype = {};
BoxalinoDataIntelligence_CreateField_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateField_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateField_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateField_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.field = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.field !== undefined) {
      this.field = args.field;
    }
  }
};
BoxalinoDataIntelligence_UpdateField_args.prototype = {};
BoxalinoDataIntelligence_UpdateField_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.field = new Field();
        this.field.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateField_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateField_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.field !== null && this.field !== undefined) {
    output.writeFieldBegin('field', Thrift.Type.STRUCT, 3);
    this.field.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateField_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateField_result.prototype = {};
BoxalinoDataIntelligence_UpdateField_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateField_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateField_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteField_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.fieldId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.fieldId !== undefined) {
      this.fieldId = args.fieldId;
    }
  }
};
BoxalinoDataIntelligence_DeleteField_args.prototype = {};
BoxalinoDataIntelligence_DeleteField_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.fieldId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteField_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteField_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.fieldId !== null && this.fieldId !== undefined) {
    output.writeFieldBegin('fieldId', Thrift.Type.STRING, 3);
    output.writeString(this.fieldId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteField_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteField_result.prototype = {};
BoxalinoDataIntelligence_DeleteField_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteField_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteField_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetProcessTasks_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetProcessTasks_args.prototype = {};
BoxalinoDataIntelligence_GetProcessTasks_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetProcessTasks_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetProcessTasks_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetProcessTasks_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetProcessTasks_result.prototype = {};
BoxalinoDataIntelligence_GetProcessTasks_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size284 = 0;
        var _rtmp3288;
        this.success = {};
        var _ktype285 = 0;
        var _vtype286 = 0;
        _rtmp3288 = input.readMapBegin();
        _ktype285 = _rtmp3288.ktype;
        _vtype286 = _rtmp3288.vtype;
        _size284 = _rtmp3288.size;
        for (var _i289 = 0; _i289 < _size284; ++_i289)
        {
          if (_i289 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key290 = null;
          var val291 = null;
          key290 = input.readString().value;
          val291 = new ProcessTask();
          val291.read(input);
          this.success[key290] = val291;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetProcessTasks_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetProcessTasks_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter292 in this.success)
    {
      if (this.success.hasOwnProperty(kiter292))
      {
        var viter293 = this.success[kiter292];
        output.writeString(kiter292);
        viter293.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateProcessTask_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.processTaskId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.processTaskId !== undefined) {
      this.processTaskId = args.processTaskId;
    }
  }
};
BoxalinoDataIntelligence_CreateProcessTask_args.prototype = {};
BoxalinoDataIntelligence_CreateProcessTask_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.processTaskId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateProcessTask_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateProcessTask_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.processTaskId !== null && this.processTaskId !== undefined) {
    output.writeFieldBegin('processTaskId', Thrift.Type.STRING, 3);
    output.writeString(this.processTaskId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateProcessTask_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateProcessTask_result.prototype = {};
BoxalinoDataIntelligence_CreateProcessTask_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateProcessTask_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateProcessTask_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateProcessTask_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.processTask = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.processTask !== undefined) {
      this.processTask = args.processTask;
    }
  }
};
BoxalinoDataIntelligence_UpdateProcessTask_args.prototype = {};
BoxalinoDataIntelligence_UpdateProcessTask_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.processTask = new ProcessTask();
        this.processTask.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateProcessTask_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateProcessTask_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.processTask !== null && this.processTask !== undefined) {
    output.writeFieldBegin('processTask', Thrift.Type.STRUCT, 3);
    this.processTask.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateProcessTask_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateProcessTask_result.prototype = {};
BoxalinoDataIntelligence_UpdateProcessTask_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateProcessTask_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateProcessTask_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteProcessTask_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.processTaskId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.processTaskId !== undefined) {
      this.processTaskId = args.processTaskId;
    }
  }
};
BoxalinoDataIntelligence_DeleteProcessTask_args.prototype = {};
BoxalinoDataIntelligence_DeleteProcessTask_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.processTaskId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteProcessTask_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteProcessTask_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.processTaskId !== null && this.processTaskId !== undefined) {
    output.writeFieldBegin('processTaskId', Thrift.Type.STRING, 3);
    output.writeString(this.processTaskId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteProcessTask_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteProcessTask_result.prototype = {};
BoxalinoDataIntelligence_DeleteProcessTask_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteProcessTask_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteProcessTask_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_RunProcessTask_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.parameters = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.parameters !== undefined) {
      this.parameters = args.parameters;
    }
  }
};
BoxalinoDataIntelligence_RunProcessTask_args.prototype = {};
BoxalinoDataIntelligence_RunProcessTask_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.parameters = new ProcessTaskExecutionParameters();
        this.parameters.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_RunProcessTask_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_RunProcessTask_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.parameters !== null && this.parameters !== undefined) {
    output.writeFieldBegin('parameters', Thrift.Type.STRUCT, 3);
    this.parameters.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_RunProcessTask_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_RunProcessTask_result.prototype = {};
BoxalinoDataIntelligence_RunProcessTask_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_RunProcessTask_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_RunProcessTask_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetEmailCampaigns_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetEmailCampaigns_args.prototype = {};
BoxalinoDataIntelligence_GetEmailCampaigns_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetEmailCampaigns_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetEmailCampaigns_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetEmailCampaigns_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetEmailCampaigns_result.prototype = {};
BoxalinoDataIntelligence_GetEmailCampaigns_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size294 = 0;
        var _rtmp3298;
        this.success = {};
        var _ktype295 = 0;
        var _vtype296 = 0;
        _rtmp3298 = input.readMapBegin();
        _ktype295 = _rtmp3298.ktype;
        _vtype296 = _rtmp3298.vtype;
        _size294 = _rtmp3298.size;
        for (var _i299 = 0; _i299 < _size294; ++_i299)
        {
          if (_i299 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key300 = null;
          var val301 = null;
          key300 = input.readString().value;
          val301 = new EmailCampaign();
          val301.read(input);
          this.success[key300] = val301;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetEmailCampaigns_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetEmailCampaigns_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter302 in this.success)
    {
      if (this.success.hasOwnProperty(kiter302))
      {
        var viter303 = this.success[kiter302];
        output.writeString(kiter302);
        viter303.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateEmailCampaign_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.emailCampaignId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.emailCampaignId !== undefined) {
      this.emailCampaignId = args.emailCampaignId;
    }
  }
};
BoxalinoDataIntelligence_CreateEmailCampaign_args.prototype = {};
BoxalinoDataIntelligence_CreateEmailCampaign_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.emailCampaignId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateEmailCampaign_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateEmailCampaign_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.emailCampaignId !== null && this.emailCampaignId !== undefined) {
    output.writeFieldBegin('emailCampaignId', Thrift.Type.STRING, 3);
    output.writeString(this.emailCampaignId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateEmailCampaign_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateEmailCampaign_result.prototype = {};
BoxalinoDataIntelligence_CreateEmailCampaign_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateEmailCampaign_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateEmailCampaign_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateEmailCampaign_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.emailCampaign = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.emailCampaign !== undefined) {
      this.emailCampaign = args.emailCampaign;
    }
  }
};
BoxalinoDataIntelligence_UpdateEmailCampaign_args.prototype = {};
BoxalinoDataIntelligence_UpdateEmailCampaign_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.emailCampaign = new EmailCampaign();
        this.emailCampaign.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateEmailCampaign_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateEmailCampaign_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.emailCampaign !== null && this.emailCampaign !== undefined) {
    output.writeFieldBegin('emailCampaign', Thrift.Type.STRUCT, 3);
    this.emailCampaign.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateEmailCampaign_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateEmailCampaign_result.prototype = {};
BoxalinoDataIntelligence_UpdateEmailCampaign_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateEmailCampaign_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateEmailCampaign_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteEmailCampaign_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.emailCampaignId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.emailCampaignId !== undefined) {
      this.emailCampaignId = args.emailCampaignId;
    }
  }
};
BoxalinoDataIntelligence_DeleteEmailCampaign_args.prototype = {};
BoxalinoDataIntelligence_DeleteEmailCampaign_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.emailCampaignId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteEmailCampaign_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteEmailCampaign_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.emailCampaignId !== null && this.emailCampaignId !== undefined) {
    output.writeFieldBegin('emailCampaignId', Thrift.Type.STRING, 3);
    output.writeString(this.emailCampaignId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteEmailCampaign_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteEmailCampaign_result.prototype = {};
BoxalinoDataIntelligence_DeleteEmailCampaign_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteEmailCampaign_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteEmailCampaign_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetChoices_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.choiceSourceId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.choiceSourceId !== undefined) {
      this.choiceSourceId = args.choiceSourceId;
    }
  }
};
BoxalinoDataIntelligence_GetChoices_args.prototype = {};
BoxalinoDataIntelligence_GetChoices_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.choiceSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetChoices_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetChoices_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.choiceSourceId !== null && this.choiceSourceId !== undefined) {
    output.writeFieldBegin('choiceSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.choiceSourceId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetChoices_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetChoices_result.prototype = {};
BoxalinoDataIntelligence_GetChoices_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size304 = 0;
        var _rtmp3308;
        this.success = {};
        var _ktype305 = 0;
        var _vtype306 = 0;
        _rtmp3308 = input.readMapBegin();
        _ktype305 = _rtmp3308.ktype;
        _vtype306 = _rtmp3308.vtype;
        _size304 = _rtmp3308.size;
        for (var _i309 = 0; _i309 < _size304; ++_i309)
        {
          if (_i309 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key310 = null;
          var val311 = null;
          key310 = input.readString().value;
          val311 = new Choice();
          val311.read(input);
          this.success[key310] = val311;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetChoices_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetChoices_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter312 in this.success)
    {
      if (this.success.hasOwnProperty(kiter312))
      {
        var viter313 = this.success[kiter312];
        output.writeString(kiter312);
        viter313.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateChoice_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.choiceSourceId = null;
  this.choiceId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.choiceSourceId !== undefined) {
      this.choiceSourceId = args.choiceSourceId;
    }
    if (args.choiceId !== undefined) {
      this.choiceId = args.choiceId;
    }
  }
};
BoxalinoDataIntelligence_CreateChoice_args.prototype = {};
BoxalinoDataIntelligence_CreateChoice_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.choiceSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.choiceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateChoice_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateChoice_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.choiceSourceId !== null && this.choiceSourceId !== undefined) {
    output.writeFieldBegin('choiceSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.choiceSourceId);
    output.writeFieldEnd();
  }
  if (this.choiceId !== null && this.choiceId !== undefined) {
    output.writeFieldBegin('choiceId', Thrift.Type.STRING, 4);
    output.writeString(this.choiceId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateChoice_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateChoice_result.prototype = {};
BoxalinoDataIntelligence_CreateChoice_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateChoice_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateChoice_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateChoice_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.choiceSourceId = null;
  this.choice = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.choiceSourceId !== undefined) {
      this.choiceSourceId = args.choiceSourceId;
    }
    if (args.choice !== undefined) {
      this.choice = args.choice;
    }
  }
};
BoxalinoDataIntelligence_UpdateChoice_args.prototype = {};
BoxalinoDataIntelligence_UpdateChoice_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.choiceSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.choice = new Choice();
        this.choice.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateChoice_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateChoice_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.choiceSourceId !== null && this.choiceSourceId !== undefined) {
    output.writeFieldBegin('choiceSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.choiceSourceId);
    output.writeFieldEnd();
  }
  if (this.choice !== null && this.choice !== undefined) {
    output.writeFieldBegin('choice', Thrift.Type.STRUCT, 4);
    this.choice.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateChoice_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateChoice_result.prototype = {};
BoxalinoDataIntelligence_UpdateChoice_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateChoice_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateChoice_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteChoice_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.choiceSourceId = null;
  this.choiceId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.choiceSourceId !== undefined) {
      this.choiceSourceId = args.choiceSourceId;
    }
    if (args.choiceId !== undefined) {
      this.choiceId = args.choiceId;
    }
  }
};
BoxalinoDataIntelligence_DeleteChoice_args.prototype = {};
BoxalinoDataIntelligence_DeleteChoice_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.choiceSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.choiceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteChoice_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteChoice_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.choiceSourceId !== null && this.choiceSourceId !== undefined) {
    output.writeFieldBegin('choiceSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.choiceSourceId);
    output.writeFieldEnd();
  }
  if (this.choiceId !== null && this.choiceId !== undefined) {
    output.writeFieldBegin('choiceId', Thrift.Type.STRING, 4);
    output.writeString(this.choiceId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteChoice_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteChoice_result.prototype = {};
BoxalinoDataIntelligence_DeleteChoice_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteChoice_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteChoice_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetChoiceVariants_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.choiceSourceId = null;
  this.choiceId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.choiceSourceId !== undefined) {
      this.choiceSourceId = args.choiceSourceId;
    }
    if (args.choiceId !== undefined) {
      this.choiceId = args.choiceId;
    }
  }
};
BoxalinoDataIntelligence_GetChoiceVariants_args.prototype = {};
BoxalinoDataIntelligence_GetChoiceVariants_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.choiceSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.choiceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetChoiceVariants_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetChoiceVariants_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.choiceSourceId !== null && this.choiceSourceId !== undefined) {
    output.writeFieldBegin('choiceSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.choiceSourceId);
    output.writeFieldEnd();
  }
  if (this.choiceId !== null && this.choiceId !== undefined) {
    output.writeFieldBegin('choiceId', Thrift.Type.STRING, 4);
    output.writeString(this.choiceId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetChoiceVariants_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetChoiceVariants_result.prototype = {};
BoxalinoDataIntelligence_GetChoiceVariants_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size314 = 0;
        var _rtmp3318;
        this.success = {};
        var _ktype315 = 0;
        var _vtype316 = 0;
        _rtmp3318 = input.readMapBegin();
        _ktype315 = _rtmp3318.ktype;
        _vtype316 = _rtmp3318.vtype;
        _size314 = _rtmp3318.size;
        for (var _i319 = 0; _i319 < _size314; ++_i319)
        {
          if (_i319 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key320 = null;
          var val321 = null;
          key320 = input.readString().value;
          val321 = new ChoiceVariant();
          val321.read(input);
          this.success[key320] = val321;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetChoiceVariants_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetChoiceVariants_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter322 in this.success)
    {
      if (this.success.hasOwnProperty(kiter322))
      {
        var viter323 = this.success[kiter322];
        output.writeString(kiter322);
        viter323.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateChoiceVariant_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.choiceSourceId = null;
  this.choiceId = null;
  this.choiceVariantId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.choiceSourceId !== undefined) {
      this.choiceSourceId = args.choiceSourceId;
    }
    if (args.choiceId !== undefined) {
      this.choiceId = args.choiceId;
    }
    if (args.choiceVariantId !== undefined) {
      this.choiceVariantId = args.choiceVariantId;
    }
  }
};
BoxalinoDataIntelligence_CreateChoiceVariant_args.prototype = {};
BoxalinoDataIntelligence_CreateChoiceVariant_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.choiceSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.choiceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.choiceVariantId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateChoiceVariant_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateChoiceVariant_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.choiceSourceId !== null && this.choiceSourceId !== undefined) {
    output.writeFieldBegin('choiceSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.choiceSourceId);
    output.writeFieldEnd();
  }
  if (this.choiceId !== null && this.choiceId !== undefined) {
    output.writeFieldBegin('choiceId', Thrift.Type.STRING, 4);
    output.writeString(this.choiceId);
    output.writeFieldEnd();
  }
  if (this.choiceVariantId !== null && this.choiceVariantId !== undefined) {
    output.writeFieldBegin('choiceVariantId', Thrift.Type.STRING, 5);
    output.writeString(this.choiceVariantId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateChoiceVariant_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateChoiceVariant_result.prototype = {};
BoxalinoDataIntelligence_CreateChoiceVariant_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateChoiceVariant_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateChoiceVariant_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateChoiceVariant_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.choiceSourceId = null;
  this.choiceVariant = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.choiceSourceId !== undefined) {
      this.choiceSourceId = args.choiceSourceId;
    }
    if (args.choiceVariant !== undefined) {
      this.choiceVariant = args.choiceVariant;
    }
  }
};
BoxalinoDataIntelligence_UpdateChoiceVariant_args.prototype = {};
BoxalinoDataIntelligence_UpdateChoiceVariant_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.choiceSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRUCT) {
        this.choiceVariant = new ChoiceVariant();
        this.choiceVariant.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateChoiceVariant_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateChoiceVariant_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.choiceSourceId !== null && this.choiceSourceId !== undefined) {
    output.writeFieldBegin('choiceSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.choiceSourceId);
    output.writeFieldEnd();
  }
  if (this.choiceVariant !== null && this.choiceVariant !== undefined) {
    output.writeFieldBegin('choiceVariant', Thrift.Type.STRUCT, 4);
    this.choiceVariant.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateChoiceVariant_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateChoiceVariant_result.prototype = {};
BoxalinoDataIntelligence_UpdateChoiceVariant_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateChoiceVariant_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateChoiceVariant_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteChoiceVariant_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.choiceSourceId = null;
  this.choiceId = null;
  this.choiceVariantId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.choiceSourceId !== undefined) {
      this.choiceSourceId = args.choiceSourceId;
    }
    if (args.choiceId !== undefined) {
      this.choiceId = args.choiceId;
    }
    if (args.choiceVariantId !== undefined) {
      this.choiceVariantId = args.choiceVariantId;
    }
  }
};
BoxalinoDataIntelligence_DeleteChoiceVariant_args.prototype = {};
BoxalinoDataIntelligence_DeleteChoiceVariant_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.choiceSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.choiceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.choiceVariantId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteChoiceVariant_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteChoiceVariant_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.choiceSourceId !== null && this.choiceSourceId !== undefined) {
    output.writeFieldBegin('choiceSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.choiceSourceId);
    output.writeFieldEnd();
  }
  if (this.choiceId !== null && this.choiceId !== undefined) {
    output.writeFieldBegin('choiceId', Thrift.Type.STRING, 4);
    output.writeString(this.choiceId);
    output.writeFieldEnd();
  }
  if (this.choiceVariantId !== null && this.choiceVariantId !== undefined) {
    output.writeFieldBegin('choiceVariantId', Thrift.Type.STRING, 5);
    output.writeString(this.choiceVariantId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteChoiceVariant_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteChoiceVariant_result.prototype = {};
BoxalinoDataIntelligence_DeleteChoiceVariant_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteChoiceVariant_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteChoiceVariant_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetProcessStatus_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.processTaskExecutionId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.processTaskExecutionId !== undefined) {
      this.processTaskExecutionId = args.processTaskExecutionId;
    }
  }
};
BoxalinoDataIntelligence_GetProcessStatus_args.prototype = {};
BoxalinoDataIntelligence_GetProcessStatus_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.processTaskExecutionId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetProcessStatus_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetProcessStatus_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.processTaskExecutionId !== null && this.processTaskExecutionId !== undefined) {
    output.writeFieldBegin('processTaskExecutionId', Thrift.Type.STRING, 3);
    output.writeString(this.processTaskExecutionId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetProcessStatus_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetProcessStatus_result.prototype = {};
BoxalinoDataIntelligence_GetProcessStatus_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ProcessTaskExecutionStatus();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetProcessStatus_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetProcessStatus_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetConfigurationDifferences_args = function(args) {
  this.authentication = null;
  this.configurationVersionSource = null;
  this.configurationVersionDestination = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configurationVersionSource !== undefined) {
      this.configurationVersionSource = args.configurationVersionSource;
    }
    if (args.configurationVersionDestination !== undefined) {
      this.configurationVersionDestination = args.configurationVersionDestination;
    }
  }
};
BoxalinoDataIntelligence_GetConfigurationDifferences_args.prototype = {};
BoxalinoDataIntelligence_GetConfigurationDifferences_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configurationVersionSource = new ConfigurationVersion();
        this.configurationVersionSource.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.configurationVersionDestination = new ConfigurationVersion();
        this.configurationVersionDestination.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetConfigurationDifferences_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetConfigurationDifferences_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configurationVersionSource !== null && this.configurationVersionSource !== undefined) {
    output.writeFieldBegin('configurationVersionSource', Thrift.Type.STRUCT, 2);
    this.configurationVersionSource.write(output);
    output.writeFieldEnd();
  }
  if (this.configurationVersionDestination !== null && this.configurationVersionDestination !== undefined) {
    output.writeFieldBegin('configurationVersionDestination', Thrift.Type.STRUCT, 3);
    this.configurationVersionDestination.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetConfigurationDifferences_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetConfigurationDifferences_result.prototype = {};
BoxalinoDataIntelligence_GetConfigurationDifferences_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size324 = 0;
        var _rtmp3328;
        this.success = [];
        var _etype327 = 0;
        _rtmp3328 = input.readListBegin();
        _etype327 = _rtmp3328.etype;
        _size324 = _rtmp3328.size;
        for (var _i329 = 0; _i329 < _size324; ++_i329)
        {
          var elem330 = null;
          elem330 = new ConfigurationDifference();
          elem330.read(input);
          this.success.push(elem330);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetConfigurationDifferences_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetConfigurationDifferences_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter331 in this.success)
    {
      if (this.success.hasOwnProperty(iter331))
      {
        iter331 = this.success[iter331];
        iter331.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_PublishConfiguration_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_PublishConfiguration_args.prototype = {};
BoxalinoDataIntelligence_PublishConfiguration_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_PublishConfiguration_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_PublishConfiguration_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_PublishConfiguration_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_PublishConfiguration_result.prototype = {};
BoxalinoDataIntelligence_PublishConfiguration_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_PublishConfiguration_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_PublishConfiguration_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CloneConfiguration_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_CloneConfiguration_args.prototype = {};
BoxalinoDataIntelligence_CloneConfiguration_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CloneConfiguration_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CloneConfiguration_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CloneConfiguration_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CloneConfiguration_result.prototype = {};
BoxalinoDataIntelligence_CloneConfiguration_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CloneConfiguration_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CloneConfiguration_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateReferenceCSVFile_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.fileDescriptor = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.fileDescriptor !== undefined) {
      this.fileDescriptor = args.fileDescriptor;
    }
  }
};
BoxalinoDataIntelligence_CreateReferenceCSVFile_args.prototype = {};
BoxalinoDataIntelligence_CreateReferenceCSVFile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.fileDescriptor = new ReferenceCSVFileDescriptor();
        this.fileDescriptor.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateReferenceCSVFile_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateReferenceCSVFile_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.fileDescriptor !== null && this.fileDescriptor !== undefined) {
    output.writeFieldBegin('fileDescriptor', Thrift.Type.STRUCT, 3);
    this.fileDescriptor.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateReferenceCSVFile_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateReferenceCSVFile_result.prototype = {};
BoxalinoDataIntelligence_CreateReferenceCSVFile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ReferenceCSVFileDescriptor();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateReferenceCSVFile_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateReferenceCSVFile_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateReferenceCSVFile_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.fileDescriptor = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.fileDescriptor !== undefined) {
      this.fileDescriptor = args.fileDescriptor;
    }
  }
};
BoxalinoDataIntelligence_UpdateReferenceCSVFile_args.prototype = {};
BoxalinoDataIntelligence_UpdateReferenceCSVFile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.fileDescriptor = new ReferenceCSVFileDescriptor();
        this.fileDescriptor.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateReferenceCSVFile_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateReferenceCSVFile_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.fileDescriptor !== null && this.fileDescriptor !== undefined) {
    output.writeFieldBegin('fileDescriptor', Thrift.Type.STRUCT, 3);
    this.fileDescriptor.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateReferenceCSVFile_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateReferenceCSVFile_result.prototype = {};
BoxalinoDataIntelligence_UpdateReferenceCSVFile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateReferenceCSVFile_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateReferenceCSVFile_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteReferenceCSVFile_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.fileDescriptor = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.fileDescriptor !== undefined) {
      this.fileDescriptor = args.fileDescriptor;
    }
  }
};
BoxalinoDataIntelligence_DeleteReferenceCSVFile_args.prototype = {};
BoxalinoDataIntelligence_DeleteReferenceCSVFile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.fileDescriptor = new ReferenceCSVFileDescriptor();
        this.fileDescriptor.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteReferenceCSVFile_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteReferenceCSVFile_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.fileDescriptor !== null && this.fileDescriptor !== undefined) {
    output.writeFieldBegin('fileDescriptor', Thrift.Type.STRUCT, 3);
    this.fileDescriptor.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteReferenceCSVFile_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteReferenceCSVFile_result.prototype = {};
BoxalinoDataIntelligence_DeleteReferenceCSVFile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteReferenceCSVFile_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteReferenceCSVFile_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetAllReferenceCSVFiles_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetAllReferenceCSVFiles_args.prototype = {};
BoxalinoDataIntelligence_GetAllReferenceCSVFiles_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetAllReferenceCSVFiles_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetAllReferenceCSVFiles_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetAllReferenceCSVFiles_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetAllReferenceCSVFiles_result.prototype = {};
BoxalinoDataIntelligence_GetAllReferenceCSVFiles_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size332 = 0;
        var _rtmp3336;
        this.success = [];
        var _etype335 = 0;
        _rtmp3336 = input.readListBegin();
        _etype335 = _rtmp3336.etype;
        _size332 = _rtmp3336.size;
        for (var _i337 = 0; _i337 < _size332; ++_i337)
        {
          var elem338 = null;
          elem338 = new ReferenceCSVFileDescriptor();
          elem338.read(input);
          this.success.push(elem338);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetAllReferenceCSVFiles_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetAllReferenceCSVFiles_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter339 in this.success)
    {
      if (this.success.hasOwnProperty(iter339))
      {
        iter339 = this.success[iter339];
        iter339.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_args = function(args) {
  this.authentication = null;
  this.configurationVersion = null;
  this.fieldsConfigurationXML = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configurationVersion !== undefined) {
      this.configurationVersion = args.configurationVersion;
    }
    if (args.fieldsConfigurationXML !== undefined) {
      this.fieldsConfigurationXML = args.fieldsConfigurationXML;
    }
  }
};
BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_args.prototype = {};
BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configurationVersion = new ConfigurationVersion();
        this.configurationVersion.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.fieldsConfigurationXML = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configurationVersion !== null && this.configurationVersion !== undefined) {
    output.writeFieldBegin('configurationVersion', Thrift.Type.STRUCT, 2);
    this.configurationVersion.write(output);
    output.writeFieldEnd();
  }
  if (this.fieldsConfigurationXML !== null && this.fieldsConfigurationXML !== undefined) {
    output.writeFieldBegin('fieldsConfigurationXML', Thrift.Type.STRING, 3);
    output.writeString(this.fieldsConfigurationXML);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_result.prototype = {};
BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetSchedulings_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetSchedulings_args.prototype = {};
BoxalinoDataIntelligence_GetSchedulings_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetSchedulings_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetSchedulings_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetSchedulings_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetSchedulings_result.prototype = {};
BoxalinoDataIntelligence_GetSchedulings_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size340 = 0;
        var _rtmp3344;
        this.success = {};
        var _ktype341 = 0;
        var _vtype342 = 0;
        _rtmp3344 = input.readMapBegin();
        _ktype341 = _rtmp3344.ktype;
        _vtype342 = _rtmp3344.vtype;
        _size340 = _rtmp3344.size;
        for (var _i345 = 0; _i345 < _size340; ++_i345)
        {
          if (_i345 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key346 = null;
          var val347 = null;
          key346 = input.readString().value;
          val347 = new Scheduling();
          val347.read(input);
          this.success[key346] = val347;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetSchedulings_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetSchedulings_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter348 in this.success)
    {
      if (this.success.hasOwnProperty(kiter348))
      {
        var viter349 = this.success[kiter348];
        output.writeString(kiter348);
        viter349.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateScheduling_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.schedulingId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.schedulingId !== undefined) {
      this.schedulingId = args.schedulingId;
    }
  }
};
BoxalinoDataIntelligence_CreateScheduling_args.prototype = {};
BoxalinoDataIntelligence_CreateScheduling_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.schedulingId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateScheduling_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateScheduling_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.schedulingId !== null && this.schedulingId !== undefined) {
    output.writeFieldBegin('schedulingId', Thrift.Type.STRING, 3);
    output.writeString(this.schedulingId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateScheduling_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateScheduling_result.prototype = {};
BoxalinoDataIntelligence_CreateScheduling_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateScheduling_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateScheduling_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateScheduling_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.scheduling = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.scheduling !== undefined) {
      this.scheduling = args.scheduling;
    }
  }
};
BoxalinoDataIntelligence_UpdateScheduling_args.prototype = {};
BoxalinoDataIntelligence_UpdateScheduling_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.scheduling = new Scheduling();
        this.scheduling.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateScheduling_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateScheduling_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.scheduling !== null && this.scheduling !== undefined) {
    output.writeFieldBegin('scheduling', Thrift.Type.STRUCT, 3);
    this.scheduling.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateScheduling_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateScheduling_result.prototype = {};
BoxalinoDataIntelligence_UpdateScheduling_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateScheduling_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateScheduling_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteScheduling_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.schedulingId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.schedulingId !== undefined) {
      this.schedulingId = args.schedulingId;
    }
  }
};
BoxalinoDataIntelligence_DeleteScheduling_args.prototype = {};
BoxalinoDataIntelligence_DeleteScheduling_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.schedulingId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteScheduling_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteScheduling_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.schedulingId !== null && this.schedulingId !== undefined) {
    output.writeFieldBegin('schedulingId', Thrift.Type.STRING, 3);
    output.writeString(this.schedulingId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteScheduling_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteScheduling_result.prototype = {};
BoxalinoDataIntelligence_DeleteScheduling_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteScheduling_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteScheduling_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_RunScheduling_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.parameters = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.parameters !== undefined) {
      this.parameters = args.parameters;
    }
  }
};
BoxalinoDataIntelligence_RunScheduling_args.prototype = {};
BoxalinoDataIntelligence_RunScheduling_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.parameters = new SchedulingExecutionParameters();
        this.parameters.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_RunScheduling_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_RunScheduling_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.parameters !== null && this.parameters !== undefined) {
    output.writeFieldBegin('parameters', Thrift.Type.STRUCT, 3);
    this.parameters.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_RunScheduling_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_RunScheduling_result.prototype = {};
BoxalinoDataIntelligence_RunScheduling_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_RunScheduling_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_RunScheduling_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetRecommendationBlocks_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetRecommendationBlocks_args.prototype = {};
BoxalinoDataIntelligence_GetRecommendationBlocks_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetRecommendationBlocks_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetRecommendationBlocks_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetRecommendationBlocks_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetRecommendationBlocks_result.prototype = {};
BoxalinoDataIntelligence_GetRecommendationBlocks_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size350 = 0;
        var _rtmp3354;
        this.success = {};
        var _ktype351 = 0;
        var _vtype352 = 0;
        _rtmp3354 = input.readMapBegin();
        _ktype351 = _rtmp3354.ktype;
        _vtype352 = _rtmp3354.vtype;
        _size350 = _rtmp3354.size;
        for (var _i355 = 0; _i355 < _size350; ++_i355)
        {
          if (_i355 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key356 = null;
          var val357 = null;
          key356 = input.readString().value;
          val357 = new RecommendationBlock();
          val357.read(input);
          this.success[key356] = val357;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetRecommendationBlocks_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetRecommendationBlocks_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter358 in this.success)
    {
      if (this.success.hasOwnProperty(kiter358))
      {
        var viter359 = this.success[kiter358];
        output.writeString(kiter358);
        viter359.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateRecommendationBlock_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.recommendationBlockId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.recommendationBlockId !== undefined) {
      this.recommendationBlockId = args.recommendationBlockId;
    }
  }
};
BoxalinoDataIntelligence_CreateRecommendationBlock_args.prototype = {};
BoxalinoDataIntelligence_CreateRecommendationBlock_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.recommendationBlockId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateRecommendationBlock_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateRecommendationBlock_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.recommendationBlockId !== null && this.recommendationBlockId !== undefined) {
    output.writeFieldBegin('recommendationBlockId', Thrift.Type.STRING, 3);
    output.writeString(this.recommendationBlockId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateRecommendationBlock_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateRecommendationBlock_result.prototype = {};
BoxalinoDataIntelligence_CreateRecommendationBlock_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateRecommendationBlock_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateRecommendationBlock_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateRecommendationBlock_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.recommendationBlock = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.recommendationBlock !== undefined) {
      this.recommendationBlock = args.recommendationBlock;
    }
  }
};
BoxalinoDataIntelligence_UpdateRecommendationBlock_args.prototype = {};
BoxalinoDataIntelligence_UpdateRecommendationBlock_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.recommendationBlock = new RecommendationBlock();
        this.recommendationBlock.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateRecommendationBlock_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateRecommendationBlock_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.recommendationBlock !== null && this.recommendationBlock !== undefined) {
    output.writeFieldBegin('recommendationBlock', Thrift.Type.STRUCT, 3);
    this.recommendationBlock.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateRecommendationBlock_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateRecommendationBlock_result.prototype = {};
BoxalinoDataIntelligence_UpdateRecommendationBlock_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateRecommendationBlock_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateRecommendationBlock_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteRecommendationBlock_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.recommendationBlockId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.recommendationBlockId !== undefined) {
      this.recommendationBlockId = args.recommendationBlockId;
    }
  }
};
BoxalinoDataIntelligence_DeleteRecommendationBlock_args.prototype = {};
BoxalinoDataIntelligence_DeleteRecommendationBlock_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.recommendationBlockId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteRecommendationBlock_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteRecommendationBlock_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.recommendationBlockId !== null && this.recommendationBlockId !== undefined) {
    output.writeFieldBegin('recommendationBlockId', Thrift.Type.STRING, 3);
    output.writeString(this.recommendationBlockId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteRecommendationBlock_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteRecommendationBlock_result.prototype = {};
BoxalinoDataIntelligence_DeleteRecommendationBlock_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteRecommendationBlock_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteRecommendationBlock_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetDataSources_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetDataSources_args.prototype = {};
BoxalinoDataIntelligence_GetDataSources_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetDataSources_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetDataSources_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetDataSources_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetDataSources_result.prototype = {};
BoxalinoDataIntelligence_GetDataSources_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size360 = 0;
        var _rtmp3364;
        this.success = {};
        var _ktype361 = 0;
        var _vtype362 = 0;
        _rtmp3364 = input.readMapBegin();
        _ktype361 = _rtmp3364.ktype;
        _vtype362 = _rtmp3364.vtype;
        _size360 = _rtmp3364.size;
        for (var _i365 = 0; _i365 < _size360; ++_i365)
        {
          if (_i365 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key366 = null;
          var val367 = null;
          key366 = input.readString().value;
          val367 = new DataSource();
          val367.read(input);
          this.success[key366] = val367;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetDataSources_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetDataSources_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter368 in this.success)
    {
      if (this.success.hasOwnProperty(kiter368))
      {
        var viter369 = this.success[kiter368];
        output.writeString(kiter368);
        viter369.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateDataSource_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataSourceId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataSourceId !== undefined) {
      this.dataSourceId = args.dataSourceId;
    }
  }
};
BoxalinoDataIntelligence_CreateDataSource_args.prototype = {};
BoxalinoDataIntelligence_CreateDataSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.dataSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateDataSource_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateDataSource_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataSourceId !== null && this.dataSourceId !== undefined) {
    output.writeFieldBegin('dataSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.dataSourceId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateDataSource_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateDataSource_result.prototype = {};
BoxalinoDataIntelligence_CreateDataSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateDataSource_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateDataSource_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateDataSource_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataSource = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataSource !== undefined) {
      this.dataSource = args.dataSource;
    }
  }
};
BoxalinoDataIntelligence_UpdateDataSource_args.prototype = {};
BoxalinoDataIntelligence_UpdateDataSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.dataSource = new DataSource();
        this.dataSource.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateDataSource_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateDataSource_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataSource !== null && this.dataSource !== undefined) {
    output.writeFieldBegin('dataSource', Thrift.Type.STRUCT, 3);
    this.dataSource.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateDataSource_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateDataSource_result.prototype = {};
BoxalinoDataIntelligence_UpdateDataSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateDataSource_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateDataSource_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteDataSource_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataSourceId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataSourceId !== undefined) {
      this.dataSourceId = args.dataSourceId;
    }
  }
};
BoxalinoDataIntelligence_DeleteDataSource_args.prototype = {};
BoxalinoDataIntelligence_DeleteDataSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.dataSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteDataSource_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteDataSource_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataSourceId !== null && this.dataSourceId !== undefined) {
    output.writeFieldBegin('dataSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.dataSourceId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteDataSource_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteDataSource_result.prototype = {};
BoxalinoDataIntelligence_DeleteDataSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteDataSource_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteDataSource_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetDataExports_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetDataExports_args.prototype = {};
BoxalinoDataIntelligence_GetDataExports_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetDataExports_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetDataExports_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetDataExports_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetDataExports_result.prototype = {};
BoxalinoDataIntelligence_GetDataExports_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size370 = 0;
        var _rtmp3374;
        this.success = {};
        var _ktype371 = 0;
        var _vtype372 = 0;
        _rtmp3374 = input.readMapBegin();
        _ktype371 = _rtmp3374.ktype;
        _vtype372 = _rtmp3374.vtype;
        _size370 = _rtmp3374.size;
        for (var _i375 = 0; _i375 < _size370; ++_i375)
        {
          if (_i375 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key376 = null;
          var val377 = null;
          key376 = input.readString().value;
          val377 = new DataExport();
          val377.read(input);
          this.success[key376] = val377;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetDataExports_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetDataExports_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter378 in this.success)
    {
      if (this.success.hasOwnProperty(kiter378))
      {
        var viter379 = this.success[kiter378];
        output.writeString(kiter378);
        viter379.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateDataExport_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataExportId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataExportId !== undefined) {
      this.dataExportId = args.dataExportId;
    }
  }
};
BoxalinoDataIntelligence_CreateDataExport_args.prototype = {};
BoxalinoDataIntelligence_CreateDataExport_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.dataExportId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateDataExport_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateDataExport_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataExportId !== null && this.dataExportId !== undefined) {
    output.writeFieldBegin('dataExportId', Thrift.Type.STRING, 3);
    output.writeString(this.dataExportId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateDataExport_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateDataExport_result.prototype = {};
BoxalinoDataIntelligence_CreateDataExport_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateDataExport_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateDataExport_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateDataExport_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataExport = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataExport !== undefined) {
      this.dataExport = args.dataExport;
    }
  }
};
BoxalinoDataIntelligence_UpdateDataExport_args.prototype = {};
BoxalinoDataIntelligence_UpdateDataExport_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.dataExport = new DataExport();
        this.dataExport.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateDataExport_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateDataExport_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataExport !== null && this.dataExport !== undefined) {
    output.writeFieldBegin('dataExport', Thrift.Type.STRUCT, 3);
    this.dataExport.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateDataExport_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateDataExport_result.prototype = {};
BoxalinoDataIntelligence_UpdateDataExport_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateDataExport_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateDataExport_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteDataExport_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataExportId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataExportId !== undefined) {
      this.dataExportId = args.dataExportId;
    }
  }
};
BoxalinoDataIntelligence_DeleteDataExport_args.prototype = {};
BoxalinoDataIntelligence_DeleteDataExport_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.dataExportId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteDataExport_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteDataExport_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataExportId !== null && this.dataExportId !== undefined) {
    output.writeFieldBegin('dataExportId', Thrift.Type.STRING, 3);
    output.writeString(this.dataExportId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteDataExport_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteDataExport_result.prototype = {};
BoxalinoDataIntelligence_DeleteDataExport_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteDataExport_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteDataExport_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_args.prototype = {};
BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_result.prototype = {};
BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.MAP) {
        var _size380 = 0;
        var _rtmp3384;
        this.success = {};
        var _ktype381 = 0;
        var _vtype382 = 0;
        _rtmp3384 = input.readMapBegin();
        _ktype381 = _rtmp3384.ktype;
        _vtype382 = _rtmp3384.vtype;
        _size380 = _rtmp3384.size;
        for (var _i385 = 0; _i385 < _size380; ++_i385)
        {
          if (_i385 > 0 ) {
            if (input.rstack.length > input.rpos[input.rpos.length -1] + 1) {
              input.rstack.pop();
            }
          }
          var key386 = null;
          var val387 = null;
          key386 = input.readString().value;
          val387 = new ReferenceCSVDataSource();
          val387.read(input);
          this.success[key386] = val387;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.MAP, 0);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRUCT, Thrift.objectLength(this.success));
    for (var kiter388 in this.success)
    {
      if (this.success.hasOwnProperty(kiter388))
      {
        var viter389 = this.success[kiter388];
        output.writeString(kiter388);
        viter389.write(output);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateReferenceCSVDataSource_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataSourceId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataSourceId !== undefined) {
      this.dataSourceId = args.dataSourceId;
    }
  }
};
BoxalinoDataIntelligence_CreateReferenceCSVDataSource_args.prototype = {};
BoxalinoDataIntelligence_CreateReferenceCSVDataSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.dataSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateReferenceCSVDataSource_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateReferenceCSVDataSource_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataSourceId !== null && this.dataSourceId !== undefined) {
    output.writeFieldBegin('dataSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.dataSourceId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateReferenceCSVDataSource_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_CreateReferenceCSVDataSource_result.prototype = {};
BoxalinoDataIntelligence_CreateReferenceCSVDataSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_CreateReferenceCSVDataSource_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_CreateReferenceCSVDataSource_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataSource = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataSource !== undefined) {
      this.dataSource = args.dataSource;
    }
  }
};
BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_args.prototype = {};
BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.dataSource = new ReferenceCSVDataSource();
        this.dataSource.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataSource !== null && this.dataSource !== undefined) {
    output.writeFieldBegin('dataSource', Thrift.Type.STRUCT, 3);
    this.dataSource.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_result.prototype = {};
BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.dataSourceId = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.dataSourceId !== undefined) {
      this.dataSourceId = args.dataSourceId;
    }
  }
};
BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_args.prototype = {};
BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRING) {
        this.dataSourceId = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.dataSourceId !== null && this.dataSourceId !== undefined) {
    output.writeFieldBegin('dataSourceId', Thrift.Type.STRING, 3);
    output.writeString(this.dataSourceId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_result = function(args) {
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_result.prototype = {};
BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_result');
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetLastTransactionID_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
  }
};
BoxalinoDataIntelligence_GetLastTransactionID_args.prototype = {};
BoxalinoDataIntelligence_GetLastTransactionID_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetLastTransactionID_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetLastTransactionID_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetLastTransactionID_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetLastTransactionID_result.prototype = {};
BoxalinoDataIntelligence_GetLastTransactionID_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRING) {
        this.success = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetLastTransactionID_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetLastTransactionID_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRING, 0);
    output.writeString(this.success);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetPageViews_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.range = null;
  this.precision = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.range !== undefined) {
      this.range = args.range;
    }
    if (args.precision !== undefined) {
      this.precision = args.precision;
    }
  }
};
BoxalinoDataIntelligence_GetPageViews_args.prototype = {};
BoxalinoDataIntelligence_GetPageViews_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.range = new TimeRange();
        this.range.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.precision = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetPageViews_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetPageViews_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.range !== null && this.range !== undefined) {
    output.writeFieldBegin('range', Thrift.Type.STRUCT, 3);
    this.range.write(output);
    output.writeFieldEnd();
  }
  if (this.precision !== null && this.precision !== undefined) {
    output.writeFieldBegin('precision', Thrift.Type.I32, 4);
    output.writeI32(this.precision);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetPageViews_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetPageViews_result.prototype = {};
BoxalinoDataIntelligence_GetPageViews_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size390 = 0;
        var _rtmp3394;
        this.success = [];
        var _etype393 = 0;
        _rtmp3394 = input.readListBegin();
        _etype393 = _rtmp3394.etype;
        _size390 = _rtmp3394.size;
        for (var _i395 = 0; _i395 < _size390; ++_i395)
        {
          var elem396 = null;
          elem396 = new TimeRangeValue();
          elem396.read(input);
          this.success.push(elem396);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetPageViews_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetPageViews_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter397 in this.success)
    {
      if (this.success.hasOwnProperty(iter397))
      {
        iter397 = this.success[iter397];
        iter397.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetTransactionReport_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.request = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.request !== undefined) {
      this.request = args.request;
    }
  }
};
BoxalinoDataIntelligence_GetTransactionReport_args.prototype = {};
BoxalinoDataIntelligence_GetTransactionReport_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new TransactionReportRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetTransactionReport_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetTransactionReport_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 3);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetTransactionReport_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetTransactionReport_result.prototype = {};
BoxalinoDataIntelligence_GetTransactionReport_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new TransactionReport();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetTransactionReport_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetTransactionReport_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetBehaviorReport_args = function(args) {
  this.authentication = null;
  this.configuration = null;
  this.request = null;
  if (args) {
    if (args.authentication !== undefined) {
      this.authentication = args.authentication;
    }
    if (args.configuration !== undefined) {
      this.configuration = args.configuration;
    }
    if (args.request !== undefined) {
      this.request = args.request;
    }
  }
};
BoxalinoDataIntelligence_GetBehaviorReport_args.prototype = {};
BoxalinoDataIntelligence_GetBehaviorReport_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.authentication = new Authentication();
        this.authentication.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.configuration = new ConfigurationVersion();
        this.configuration.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.request = new BehaviorReportRequest();
        this.request.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetBehaviorReport_args.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetBehaviorReport_args');
  if (this.authentication !== null && this.authentication !== undefined) {
    output.writeFieldBegin('authentication', Thrift.Type.STRUCT, 1);
    this.authentication.write(output);
    output.writeFieldEnd();
  }
  if (this.configuration !== null && this.configuration !== undefined) {
    output.writeFieldBegin('configuration', Thrift.Type.STRUCT, 2);
    this.configuration.write(output);
    output.writeFieldEnd();
  }
  if (this.request !== null && this.request !== undefined) {
    output.writeFieldBegin('request', Thrift.Type.STRUCT, 3);
    this.request.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligence_GetBehaviorReport_result = function(args) {
  this.success = null;
  this.e = null;
  if (args instanceof DataIntelligenceServiceException) {
    this.e = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.e !== undefined) {
      this.e = args.e;
    }
  }
};
BoxalinoDataIntelligence_GetBehaviorReport_result.prototype = {};
BoxalinoDataIntelligence_GetBehaviorReport_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new BehaviorReport();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.e = new DataIntelligenceServiceException();
        this.e.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

BoxalinoDataIntelligence_GetBehaviorReport_result.prototype.write = function(output) {
  output.writeStructBegin('BoxalinoDataIntelligence_GetBehaviorReport_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.e !== null && this.e !== undefined) {
    output.writeFieldBegin('e', Thrift.Type.STRUCT, 1);
    this.e.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

BoxalinoDataIntelligenceClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
BoxalinoDataIntelligenceClient.prototype = {};
BoxalinoDataIntelligenceClient.prototype.GetAuthentication = function(authentication, callback) {
  if (callback === undefined) {
    this.send_GetAuthentication(authentication);
    return this.recv_GetAuthentication();
  } else {
    var postData = this.send_GetAuthentication(authentication, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetAuthentication);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetAuthentication = function(authentication, callback) {
  this.output.writeMessageBegin('GetAuthentication', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetAuthentication_args();
  args.authentication = authentication;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetAuthentication = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetAuthentication_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetAuthentication failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.UpdatePassword = function(authentication, newPassword, callback) {
  if (callback === undefined) {
    this.send_UpdatePassword(authentication, newPassword);
    this.recv_UpdatePassword();
  } else {
    var postData = this.send_UpdatePassword(authentication, newPassword, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdatePassword);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdatePassword = function(authentication, newPassword, callback) {
  this.output.writeMessageBegin('UpdatePassword', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdatePassword_args();
  args.authentication = authentication;
  args.newPassword = newPassword;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdatePassword = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdatePassword_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetConfigurationVersion = function(authentication, versionType, callback) {
  if (callback === undefined) {
    this.send_GetConfigurationVersion(authentication, versionType);
    return this.recv_GetConfigurationVersion();
  } else {
    var postData = this.send_GetConfigurationVersion(authentication, versionType, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetConfigurationVersion);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetConfigurationVersion = function(authentication, versionType, callback) {
  this.output.writeMessageBegin('GetConfigurationVersion', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetConfigurationVersion_args();
  args.authentication = authentication;
  args.versionType = versionType;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetConfigurationVersion = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetConfigurationVersion_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetConfigurationVersion failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.SetDataSourcesConfiguration = function(authentication, configurationVersion, dataSourcesConfigurationXML, callback) {
  if (callback === undefined) {
    this.send_SetDataSourcesConfiguration(authentication, configurationVersion, dataSourcesConfigurationXML);
    this.recv_SetDataSourcesConfiguration();
  } else {
    var postData = this.send_SetDataSourcesConfiguration(authentication, configurationVersion, dataSourcesConfigurationXML, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_SetDataSourcesConfiguration);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_SetDataSourcesConfiguration = function(authentication, configurationVersion, dataSourcesConfigurationXML, callback) {
  this.output.writeMessageBegin('SetDataSourcesConfiguration', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_SetDataSourcesConfiguration_args();
  args.authentication = authentication;
  args.configurationVersion = configurationVersion;
  args.dataSourcesConfigurationXML = dataSourcesConfigurationXML;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_SetDataSourcesConfiguration = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_SetDataSourcesConfiguration_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetFields = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetFields(authentication, configuration);
    return this.recv_GetFields();
  } else {
    var postData = this.send_GetFields(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetFields);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetFields = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetFields', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetFields_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetFields = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetFields_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetFields failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateField = function(authentication, configuration, fieldId, callback) {
  if (callback === undefined) {
    this.send_CreateField(authentication, configuration, fieldId);
    this.recv_CreateField();
  } else {
    var postData = this.send_CreateField(authentication, configuration, fieldId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateField);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateField = function(authentication, configuration, fieldId, callback) {
  this.output.writeMessageBegin('CreateField', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateField_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.fieldId = fieldId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateField = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateField_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateField = function(authentication, configuration, field, callback) {
  if (callback === undefined) {
    this.send_UpdateField(authentication, configuration, field);
    this.recv_UpdateField();
  } else {
    var postData = this.send_UpdateField(authentication, configuration, field, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateField);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateField = function(authentication, configuration, field, callback) {
  this.output.writeMessageBegin('UpdateField', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateField_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.field = field;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateField = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateField_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteField = function(authentication, configuration, fieldId, callback) {
  if (callback === undefined) {
    this.send_DeleteField(authentication, configuration, fieldId);
    this.recv_DeleteField();
  } else {
    var postData = this.send_DeleteField(authentication, configuration, fieldId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteField);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteField = function(authentication, configuration, fieldId, callback) {
  this.output.writeMessageBegin('DeleteField', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteField_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.fieldId = fieldId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteField = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteField_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetProcessTasks = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetProcessTasks(authentication, configuration);
    return this.recv_GetProcessTasks();
  } else {
    var postData = this.send_GetProcessTasks(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetProcessTasks);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetProcessTasks = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetProcessTasks', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetProcessTasks_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetProcessTasks = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetProcessTasks_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetProcessTasks failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateProcessTask = function(authentication, configuration, processTaskId, callback) {
  if (callback === undefined) {
    this.send_CreateProcessTask(authentication, configuration, processTaskId);
    this.recv_CreateProcessTask();
  } else {
    var postData = this.send_CreateProcessTask(authentication, configuration, processTaskId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateProcessTask);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateProcessTask = function(authentication, configuration, processTaskId, callback) {
  this.output.writeMessageBegin('CreateProcessTask', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateProcessTask_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.processTaskId = processTaskId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateProcessTask = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateProcessTask_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateProcessTask = function(authentication, configuration, processTask, callback) {
  if (callback === undefined) {
    this.send_UpdateProcessTask(authentication, configuration, processTask);
    this.recv_UpdateProcessTask();
  } else {
    var postData = this.send_UpdateProcessTask(authentication, configuration, processTask, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateProcessTask);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateProcessTask = function(authentication, configuration, processTask, callback) {
  this.output.writeMessageBegin('UpdateProcessTask', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateProcessTask_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.processTask = processTask;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateProcessTask = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateProcessTask_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteProcessTask = function(authentication, configuration, processTaskId, callback) {
  if (callback === undefined) {
    this.send_DeleteProcessTask(authentication, configuration, processTaskId);
    this.recv_DeleteProcessTask();
  } else {
    var postData = this.send_DeleteProcessTask(authentication, configuration, processTaskId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteProcessTask);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteProcessTask = function(authentication, configuration, processTaskId, callback) {
  this.output.writeMessageBegin('DeleteProcessTask', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteProcessTask_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.processTaskId = processTaskId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteProcessTask = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteProcessTask_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.RunProcessTask = function(authentication, configuration, parameters, callback) {
  if (callback === undefined) {
    this.send_RunProcessTask(authentication, configuration, parameters);
    return this.recv_RunProcessTask();
  } else {
    var postData = this.send_RunProcessTask(authentication, configuration, parameters, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_RunProcessTask);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_RunProcessTask = function(authentication, configuration, parameters, callback) {
  this.output.writeMessageBegin('RunProcessTask', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_RunProcessTask_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.parameters = parameters;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_RunProcessTask = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_RunProcessTask_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'RunProcessTask failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.GetEmailCampaigns = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetEmailCampaigns(authentication, configuration);
    return this.recv_GetEmailCampaigns();
  } else {
    var postData = this.send_GetEmailCampaigns(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetEmailCampaigns);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetEmailCampaigns = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetEmailCampaigns', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetEmailCampaigns_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetEmailCampaigns = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetEmailCampaigns_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetEmailCampaigns failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateEmailCampaign = function(authentication, configuration, emailCampaignId, callback) {
  if (callback === undefined) {
    this.send_CreateEmailCampaign(authentication, configuration, emailCampaignId);
    this.recv_CreateEmailCampaign();
  } else {
    var postData = this.send_CreateEmailCampaign(authentication, configuration, emailCampaignId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateEmailCampaign);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateEmailCampaign = function(authentication, configuration, emailCampaignId, callback) {
  this.output.writeMessageBegin('CreateEmailCampaign', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateEmailCampaign_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.emailCampaignId = emailCampaignId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateEmailCampaign = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateEmailCampaign_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateEmailCampaign = function(authentication, configuration, emailCampaign, callback) {
  if (callback === undefined) {
    this.send_UpdateEmailCampaign(authentication, configuration, emailCampaign);
    this.recv_UpdateEmailCampaign();
  } else {
    var postData = this.send_UpdateEmailCampaign(authentication, configuration, emailCampaign, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateEmailCampaign);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateEmailCampaign = function(authentication, configuration, emailCampaign, callback) {
  this.output.writeMessageBegin('UpdateEmailCampaign', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateEmailCampaign_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.emailCampaign = emailCampaign;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateEmailCampaign = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateEmailCampaign_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteEmailCampaign = function(authentication, configuration, emailCampaignId, callback) {
  if (callback === undefined) {
    this.send_DeleteEmailCampaign(authentication, configuration, emailCampaignId);
    this.recv_DeleteEmailCampaign();
  } else {
    var postData = this.send_DeleteEmailCampaign(authentication, configuration, emailCampaignId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteEmailCampaign);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteEmailCampaign = function(authentication, configuration, emailCampaignId, callback) {
  this.output.writeMessageBegin('DeleteEmailCampaign', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteEmailCampaign_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.emailCampaignId = emailCampaignId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteEmailCampaign = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteEmailCampaign_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetChoices = function(authentication, configuration, choiceSourceId, callback) {
  if (callback === undefined) {
    this.send_GetChoices(authentication, configuration, choiceSourceId);
    return this.recv_GetChoices();
  } else {
    var postData = this.send_GetChoices(authentication, configuration, choiceSourceId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetChoices);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetChoices = function(authentication, configuration, choiceSourceId, callback) {
  this.output.writeMessageBegin('GetChoices', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetChoices_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.choiceSourceId = choiceSourceId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetChoices = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetChoices_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetChoices failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateChoice = function(authentication, configuration, choiceSourceId, choiceId, callback) {
  if (callback === undefined) {
    this.send_CreateChoice(authentication, configuration, choiceSourceId, choiceId);
    this.recv_CreateChoice();
  } else {
    var postData = this.send_CreateChoice(authentication, configuration, choiceSourceId, choiceId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateChoice);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateChoice = function(authentication, configuration, choiceSourceId, choiceId, callback) {
  this.output.writeMessageBegin('CreateChoice', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateChoice_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.choiceSourceId = choiceSourceId;
  args.choiceId = choiceId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateChoice = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateChoice_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateChoice = function(authentication, configuration, choiceSourceId, choice, callback) {
  if (callback === undefined) {
    this.send_UpdateChoice(authentication, configuration, choiceSourceId, choice);
    this.recv_UpdateChoice();
  } else {
    var postData = this.send_UpdateChoice(authentication, configuration, choiceSourceId, choice, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateChoice);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateChoice = function(authentication, configuration, choiceSourceId, choice, callback) {
  this.output.writeMessageBegin('UpdateChoice', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateChoice_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.choiceSourceId = choiceSourceId;
  args.choice = choice;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateChoice = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateChoice_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteChoice = function(authentication, configuration, choiceSourceId, choiceId, callback) {
  if (callback === undefined) {
    this.send_DeleteChoice(authentication, configuration, choiceSourceId, choiceId);
    this.recv_DeleteChoice();
  } else {
    var postData = this.send_DeleteChoice(authentication, configuration, choiceSourceId, choiceId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteChoice);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteChoice = function(authentication, configuration, choiceSourceId, choiceId, callback) {
  this.output.writeMessageBegin('DeleteChoice', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteChoice_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.choiceSourceId = choiceSourceId;
  args.choiceId = choiceId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteChoice = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteChoice_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetChoiceVariants = function(authentication, configuration, choiceSourceId, choiceId, callback) {
  if (callback === undefined) {
    this.send_GetChoiceVariants(authentication, configuration, choiceSourceId, choiceId);
    return this.recv_GetChoiceVariants();
  } else {
    var postData = this.send_GetChoiceVariants(authentication, configuration, choiceSourceId, choiceId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetChoiceVariants);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetChoiceVariants = function(authentication, configuration, choiceSourceId, choiceId, callback) {
  this.output.writeMessageBegin('GetChoiceVariants', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetChoiceVariants_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.choiceSourceId = choiceSourceId;
  args.choiceId = choiceId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetChoiceVariants = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetChoiceVariants_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetChoiceVariants failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateChoiceVariant = function(authentication, configuration, choiceSourceId, choiceId, choiceVariantId, callback) {
  if (callback === undefined) {
    this.send_CreateChoiceVariant(authentication, configuration, choiceSourceId, choiceId, choiceVariantId);
    this.recv_CreateChoiceVariant();
  } else {
    var postData = this.send_CreateChoiceVariant(authentication, configuration, choiceSourceId, choiceId, choiceVariantId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateChoiceVariant);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateChoiceVariant = function(authentication, configuration, choiceSourceId, choiceId, choiceVariantId, callback) {
  this.output.writeMessageBegin('CreateChoiceVariant', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateChoiceVariant_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.choiceSourceId = choiceSourceId;
  args.choiceId = choiceId;
  args.choiceVariantId = choiceVariantId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateChoiceVariant = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateChoiceVariant_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateChoiceVariant = function(authentication, configuration, choiceSourceId, choiceVariant, callback) {
  if (callback === undefined) {
    this.send_UpdateChoiceVariant(authentication, configuration, choiceSourceId, choiceVariant);
    this.recv_UpdateChoiceVariant();
  } else {
    var postData = this.send_UpdateChoiceVariant(authentication, configuration, choiceSourceId, choiceVariant, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateChoiceVariant);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateChoiceVariant = function(authentication, configuration, choiceSourceId, choiceVariant, callback) {
  this.output.writeMessageBegin('UpdateChoiceVariant', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateChoiceVariant_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.choiceSourceId = choiceSourceId;
  args.choiceVariant = choiceVariant;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateChoiceVariant = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateChoiceVariant_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteChoiceVariant = function(authentication, configuration, choiceSourceId, choiceId, choiceVariantId, callback) {
  if (callback === undefined) {
    this.send_DeleteChoiceVariant(authentication, configuration, choiceSourceId, choiceId, choiceVariantId);
    this.recv_DeleteChoiceVariant();
  } else {
    var postData = this.send_DeleteChoiceVariant(authentication, configuration, choiceSourceId, choiceId, choiceVariantId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteChoiceVariant);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteChoiceVariant = function(authentication, configuration, choiceSourceId, choiceId, choiceVariantId, callback) {
  this.output.writeMessageBegin('DeleteChoiceVariant', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteChoiceVariant_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.choiceSourceId = choiceSourceId;
  args.choiceId = choiceId;
  args.choiceVariantId = choiceVariantId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteChoiceVariant = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteChoiceVariant_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetProcessStatus = function(authentication, configuration, processTaskExecutionId, callback) {
  if (callback === undefined) {
    this.send_GetProcessStatus(authentication, configuration, processTaskExecutionId);
    return this.recv_GetProcessStatus();
  } else {
    var postData = this.send_GetProcessStatus(authentication, configuration, processTaskExecutionId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetProcessStatus);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetProcessStatus = function(authentication, configuration, processTaskExecutionId, callback) {
  this.output.writeMessageBegin('GetProcessStatus', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetProcessStatus_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.processTaskExecutionId = processTaskExecutionId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetProcessStatus = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetProcessStatus_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetProcessStatus failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.GetConfigurationDifferences = function(authentication, configurationVersionSource, configurationVersionDestination, callback) {
  if (callback === undefined) {
    this.send_GetConfigurationDifferences(authentication, configurationVersionSource, configurationVersionDestination);
    return this.recv_GetConfigurationDifferences();
  } else {
    var postData = this.send_GetConfigurationDifferences(authentication, configurationVersionSource, configurationVersionDestination, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetConfigurationDifferences);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetConfigurationDifferences = function(authentication, configurationVersionSource, configurationVersionDestination, callback) {
  this.output.writeMessageBegin('GetConfigurationDifferences', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetConfigurationDifferences_args();
  args.authentication = authentication;
  args.configurationVersionSource = configurationVersionSource;
  args.configurationVersionDestination = configurationVersionDestination;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetConfigurationDifferences = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetConfigurationDifferences_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetConfigurationDifferences failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.PublishConfiguration = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_PublishConfiguration(authentication, configuration);
    this.recv_PublishConfiguration();
  } else {
    var postData = this.send_PublishConfiguration(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_PublishConfiguration);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_PublishConfiguration = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('PublishConfiguration', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_PublishConfiguration_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_PublishConfiguration = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_PublishConfiguration_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.CloneConfiguration = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_CloneConfiguration(authentication, configuration);
    this.recv_CloneConfiguration();
  } else {
    var postData = this.send_CloneConfiguration(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CloneConfiguration);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CloneConfiguration = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('CloneConfiguration', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CloneConfiguration_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CloneConfiguration = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CloneConfiguration_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.CreateReferenceCSVFile = function(authentication, configuration, fileDescriptor, callback) {
  if (callback === undefined) {
    this.send_CreateReferenceCSVFile(authentication, configuration, fileDescriptor);
    return this.recv_CreateReferenceCSVFile();
  } else {
    var postData = this.send_CreateReferenceCSVFile(authentication, configuration, fileDescriptor, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateReferenceCSVFile);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateReferenceCSVFile = function(authentication, configuration, fileDescriptor, callback) {
  this.output.writeMessageBegin('CreateReferenceCSVFile', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateReferenceCSVFile_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.fileDescriptor = fileDescriptor;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateReferenceCSVFile = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateReferenceCSVFile_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'CreateReferenceCSVFile failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.UpdateReferenceCSVFile = function(authentication, configuration, fileDescriptor, callback) {
  if (callback === undefined) {
    this.send_UpdateReferenceCSVFile(authentication, configuration, fileDescriptor);
    this.recv_UpdateReferenceCSVFile();
  } else {
    var postData = this.send_UpdateReferenceCSVFile(authentication, configuration, fileDescriptor, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateReferenceCSVFile);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateReferenceCSVFile = function(authentication, configuration, fileDescriptor, callback) {
  this.output.writeMessageBegin('UpdateReferenceCSVFile', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateReferenceCSVFile_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.fileDescriptor = fileDescriptor;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateReferenceCSVFile = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateReferenceCSVFile_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteReferenceCSVFile = function(authentication, configuration, fileDescriptor, callback) {
  if (callback === undefined) {
    this.send_DeleteReferenceCSVFile(authentication, configuration, fileDescriptor);
    this.recv_DeleteReferenceCSVFile();
  } else {
    var postData = this.send_DeleteReferenceCSVFile(authentication, configuration, fileDescriptor, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteReferenceCSVFile);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteReferenceCSVFile = function(authentication, configuration, fileDescriptor, callback) {
  this.output.writeMessageBegin('DeleteReferenceCSVFile', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteReferenceCSVFile_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.fileDescriptor = fileDescriptor;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteReferenceCSVFile = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteReferenceCSVFile_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetAllReferenceCSVFiles = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetAllReferenceCSVFiles(authentication, configuration);
    return this.recv_GetAllReferenceCSVFiles();
  } else {
    var postData = this.send_GetAllReferenceCSVFiles(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetAllReferenceCSVFiles);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetAllReferenceCSVFiles = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetAllReferenceCSVFiles', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetAllReferenceCSVFiles_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetAllReferenceCSVFiles = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetAllReferenceCSVFiles_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetAllReferenceCSVFiles failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateFieldsFromReferenceCSVFile = function(authentication, configurationVersion, fieldsConfigurationXML, callback) {
  if (callback === undefined) {
    this.send_CreateFieldsFromReferenceCSVFile(authentication, configurationVersion, fieldsConfigurationXML);
    this.recv_CreateFieldsFromReferenceCSVFile();
  } else {
    var postData = this.send_CreateFieldsFromReferenceCSVFile(authentication, configurationVersion, fieldsConfigurationXML, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateFieldsFromReferenceCSVFile);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateFieldsFromReferenceCSVFile = function(authentication, configurationVersion, fieldsConfigurationXML, callback) {
  this.output.writeMessageBegin('CreateFieldsFromReferenceCSVFile', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_args();
  args.authentication = authentication;
  args.configurationVersion = configurationVersion;
  args.fieldsConfigurationXML = fieldsConfigurationXML;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateFieldsFromReferenceCSVFile = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateFieldsFromReferenceCSVFile_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetSchedulings = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetSchedulings(authentication, configuration);
    return this.recv_GetSchedulings();
  } else {
    var postData = this.send_GetSchedulings(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetSchedulings);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetSchedulings = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetSchedulings', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetSchedulings_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetSchedulings = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetSchedulings_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetSchedulings failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateScheduling = function(authentication, configuration, schedulingId, callback) {
  if (callback === undefined) {
    this.send_CreateScheduling(authentication, configuration, schedulingId);
    this.recv_CreateScheduling();
  } else {
    var postData = this.send_CreateScheduling(authentication, configuration, schedulingId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateScheduling);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateScheduling = function(authentication, configuration, schedulingId, callback) {
  this.output.writeMessageBegin('CreateScheduling', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateScheduling_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.schedulingId = schedulingId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateScheduling = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateScheduling_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateScheduling = function(authentication, configuration, scheduling, callback) {
  if (callback === undefined) {
    this.send_UpdateScheduling(authentication, configuration, scheduling);
    this.recv_UpdateScheduling();
  } else {
    var postData = this.send_UpdateScheduling(authentication, configuration, scheduling, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateScheduling);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateScheduling = function(authentication, configuration, scheduling, callback) {
  this.output.writeMessageBegin('UpdateScheduling', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateScheduling_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.scheduling = scheduling;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateScheduling = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateScheduling_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteScheduling = function(authentication, configuration, schedulingId, callback) {
  if (callback === undefined) {
    this.send_DeleteScheduling(authentication, configuration, schedulingId);
    this.recv_DeleteScheduling();
  } else {
    var postData = this.send_DeleteScheduling(authentication, configuration, schedulingId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteScheduling);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteScheduling = function(authentication, configuration, schedulingId, callback) {
  this.output.writeMessageBegin('DeleteScheduling', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteScheduling_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.schedulingId = schedulingId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteScheduling = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteScheduling_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.RunScheduling = function(authentication, configuration, parameters, callback) {
  if (callback === undefined) {
    this.send_RunScheduling(authentication, configuration, parameters);
    this.recv_RunScheduling();
  } else {
    var postData = this.send_RunScheduling(authentication, configuration, parameters, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_RunScheduling);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_RunScheduling = function(authentication, configuration, parameters, callback) {
  this.output.writeMessageBegin('RunScheduling', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_RunScheduling_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.parameters = parameters;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_RunScheduling = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_RunScheduling_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetRecommendationBlocks = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetRecommendationBlocks(authentication, configuration);
    return this.recv_GetRecommendationBlocks();
  } else {
    var postData = this.send_GetRecommendationBlocks(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetRecommendationBlocks);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetRecommendationBlocks = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetRecommendationBlocks', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetRecommendationBlocks_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetRecommendationBlocks = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetRecommendationBlocks_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetRecommendationBlocks failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateRecommendationBlock = function(authentication, configuration, recommendationBlockId, callback) {
  if (callback === undefined) {
    this.send_CreateRecommendationBlock(authentication, configuration, recommendationBlockId);
    this.recv_CreateRecommendationBlock();
  } else {
    var postData = this.send_CreateRecommendationBlock(authentication, configuration, recommendationBlockId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateRecommendationBlock);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateRecommendationBlock = function(authentication, configuration, recommendationBlockId, callback) {
  this.output.writeMessageBegin('CreateRecommendationBlock', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateRecommendationBlock_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.recommendationBlockId = recommendationBlockId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateRecommendationBlock = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateRecommendationBlock_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateRecommendationBlock = function(authentication, configuration, recommendationBlock, callback) {
  if (callback === undefined) {
    this.send_UpdateRecommendationBlock(authentication, configuration, recommendationBlock);
    this.recv_UpdateRecommendationBlock();
  } else {
    var postData = this.send_UpdateRecommendationBlock(authentication, configuration, recommendationBlock, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateRecommendationBlock);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateRecommendationBlock = function(authentication, configuration, recommendationBlock, callback) {
  this.output.writeMessageBegin('UpdateRecommendationBlock', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateRecommendationBlock_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.recommendationBlock = recommendationBlock;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateRecommendationBlock = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateRecommendationBlock_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteRecommendationBlock = function(authentication, configuration, recommendationBlockId, callback) {
  if (callback === undefined) {
    this.send_DeleteRecommendationBlock(authentication, configuration, recommendationBlockId);
    this.recv_DeleteRecommendationBlock();
  } else {
    var postData = this.send_DeleteRecommendationBlock(authentication, configuration, recommendationBlockId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteRecommendationBlock);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteRecommendationBlock = function(authentication, configuration, recommendationBlockId, callback) {
  this.output.writeMessageBegin('DeleteRecommendationBlock', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteRecommendationBlock_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.recommendationBlockId = recommendationBlockId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteRecommendationBlock = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteRecommendationBlock_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetDataSources = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetDataSources(authentication, configuration);
    return this.recv_GetDataSources();
  } else {
    var postData = this.send_GetDataSources(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetDataSources);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetDataSources = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetDataSources', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetDataSources_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetDataSources = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetDataSources_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetDataSources failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateDataSource = function(authentication, configuration, dataSourceId, callback) {
  if (callback === undefined) {
    this.send_CreateDataSource(authentication, configuration, dataSourceId);
    this.recv_CreateDataSource();
  } else {
    var postData = this.send_CreateDataSource(authentication, configuration, dataSourceId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateDataSource);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateDataSource = function(authentication, configuration, dataSourceId, callback) {
  this.output.writeMessageBegin('CreateDataSource', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateDataSource_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataSourceId = dataSourceId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateDataSource = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateDataSource_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateDataSource = function(authentication, configuration, dataSource, callback) {
  if (callback === undefined) {
    this.send_UpdateDataSource(authentication, configuration, dataSource);
    this.recv_UpdateDataSource();
  } else {
    var postData = this.send_UpdateDataSource(authentication, configuration, dataSource, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateDataSource);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateDataSource = function(authentication, configuration, dataSource, callback) {
  this.output.writeMessageBegin('UpdateDataSource', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateDataSource_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataSource = dataSource;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateDataSource = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateDataSource_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteDataSource = function(authentication, configuration, dataSourceId, callback) {
  if (callback === undefined) {
    this.send_DeleteDataSource(authentication, configuration, dataSourceId);
    this.recv_DeleteDataSource();
  } else {
    var postData = this.send_DeleteDataSource(authentication, configuration, dataSourceId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteDataSource);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteDataSource = function(authentication, configuration, dataSourceId, callback) {
  this.output.writeMessageBegin('DeleteDataSource', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteDataSource_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataSourceId = dataSourceId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteDataSource = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteDataSource_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetDataExports = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetDataExports(authentication, configuration);
    return this.recv_GetDataExports();
  } else {
    var postData = this.send_GetDataExports(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetDataExports);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetDataExports = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetDataExports', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetDataExports_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetDataExports = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetDataExports_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetDataExports failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateDataExport = function(authentication, configuration, dataExportId, callback) {
  if (callback === undefined) {
    this.send_CreateDataExport(authentication, configuration, dataExportId);
    this.recv_CreateDataExport();
  } else {
    var postData = this.send_CreateDataExport(authentication, configuration, dataExportId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateDataExport);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateDataExport = function(authentication, configuration, dataExportId, callback) {
  this.output.writeMessageBegin('CreateDataExport', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateDataExport_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataExportId = dataExportId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateDataExport = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateDataExport_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateDataExport = function(authentication, configuration, dataExport, callback) {
  if (callback === undefined) {
    this.send_UpdateDataExport(authentication, configuration, dataExport);
    this.recv_UpdateDataExport();
  } else {
    var postData = this.send_UpdateDataExport(authentication, configuration, dataExport, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateDataExport);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateDataExport = function(authentication, configuration, dataExport, callback) {
  this.output.writeMessageBegin('UpdateDataExport', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateDataExport_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataExport = dataExport;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateDataExport = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateDataExport_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteDataExport = function(authentication, configuration, dataExportId, callback) {
  if (callback === undefined) {
    this.send_DeleteDataExport(authentication, configuration, dataExportId);
    this.recv_DeleteDataExport();
  } else {
    var postData = this.send_DeleteDataExport(authentication, configuration, dataExportId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteDataExport);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteDataExport = function(authentication, configuration, dataExportId, callback) {
  this.output.writeMessageBegin('DeleteDataExport', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteDataExport_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataExportId = dataExportId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteDataExport = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteDataExport_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetReferenceCSVFileDataSources = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetReferenceCSVFileDataSources(authentication, configuration);
    return this.recv_GetReferenceCSVFileDataSources();
  } else {
    var postData = this.send_GetReferenceCSVFileDataSources(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetReferenceCSVFileDataSources);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetReferenceCSVFileDataSources = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetReferenceCSVFileDataSources', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetReferenceCSVFileDataSources = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetReferenceCSVFileDataSources_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetReferenceCSVFileDataSources failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.CreateReferenceCSVDataSource = function(authentication, configuration, dataSourceId, callback) {
  if (callback === undefined) {
    this.send_CreateReferenceCSVDataSource(authentication, configuration, dataSourceId);
    this.recv_CreateReferenceCSVDataSource();
  } else {
    var postData = this.send_CreateReferenceCSVDataSource(authentication, configuration, dataSourceId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_CreateReferenceCSVDataSource);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_CreateReferenceCSVDataSource = function(authentication, configuration, dataSourceId, callback) {
  this.output.writeMessageBegin('CreateReferenceCSVDataSource', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_CreateReferenceCSVDataSource_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataSourceId = dataSourceId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_CreateReferenceCSVDataSource = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_CreateReferenceCSVDataSource_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.UpdateReferenceCSVDataSource = function(authentication, configuration, dataSource, callback) {
  if (callback === undefined) {
    this.send_UpdateReferenceCSVDataSource(authentication, configuration, dataSource);
    this.recv_UpdateReferenceCSVDataSource();
  } else {
    var postData = this.send_UpdateReferenceCSVDataSource(authentication, configuration, dataSource, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_UpdateReferenceCSVDataSource);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_UpdateReferenceCSVDataSource = function(authentication, configuration, dataSource, callback) {
  this.output.writeMessageBegin('UpdateReferenceCSVDataSource', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataSource = dataSource;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_UpdateReferenceCSVDataSource = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_UpdateReferenceCSVDataSource_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.DeleteReferenceCSVDataSource = function(authentication, configuration, dataSourceId, callback) {
  if (callback === undefined) {
    this.send_DeleteReferenceCSVDataSource(authentication, configuration, dataSourceId);
    this.recv_DeleteReferenceCSVDataSource();
  } else {
    var postData = this.send_DeleteReferenceCSVDataSource(authentication, configuration, dataSourceId, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_DeleteReferenceCSVDataSource);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_DeleteReferenceCSVDataSource = function(authentication, configuration, dataSourceId, callback) {
  this.output.writeMessageBegin('DeleteReferenceCSVDataSource', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.dataSourceId = dataSourceId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_DeleteReferenceCSVDataSource = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_DeleteReferenceCSVDataSource_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  return;
};
BoxalinoDataIntelligenceClient.prototype.GetLastTransactionID = function(authentication, configuration, callback) {
  if (callback === undefined) {
    this.send_GetLastTransactionID(authentication, configuration);
    return this.recv_GetLastTransactionID();
  } else {
    var postData = this.send_GetLastTransactionID(authentication, configuration, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetLastTransactionID);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetLastTransactionID = function(authentication, configuration, callback) {
  this.output.writeMessageBegin('GetLastTransactionID', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetLastTransactionID_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetLastTransactionID = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetLastTransactionID_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetLastTransactionID failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.GetPageViews = function(authentication, configuration, range, precision, callback) {
  if (callback === undefined) {
    this.send_GetPageViews(authentication, configuration, range, precision);
    return this.recv_GetPageViews();
  } else {
    var postData = this.send_GetPageViews(authentication, configuration, range, precision, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetPageViews);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetPageViews = function(authentication, configuration, range, precision, callback) {
  this.output.writeMessageBegin('GetPageViews', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetPageViews_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.range = range;
  args.precision = precision;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetPageViews = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetPageViews_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetPageViews failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.GetTransactionReport = function(authentication, configuration, request, callback) {
  if (callback === undefined) {
    this.send_GetTransactionReport(authentication, configuration, request);
    return this.recv_GetTransactionReport();
  } else {
    var postData = this.send_GetTransactionReport(authentication, configuration, request, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetTransactionReport);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetTransactionReport = function(authentication, configuration, request, callback) {
  this.output.writeMessageBegin('GetTransactionReport', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetTransactionReport_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.request = request;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetTransactionReport = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetTransactionReport_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetTransactionReport failed: unknown result';
};
BoxalinoDataIntelligenceClient.prototype.GetBehaviorReport = function(authentication, configuration, request, callback) {
  if (callback === undefined) {
    this.send_GetBehaviorReport(authentication, configuration, request);
    return this.recv_GetBehaviorReport();
  } else {
    var postData = this.send_GetBehaviorReport(authentication, configuration, request, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_GetBehaviorReport);
  }
};

BoxalinoDataIntelligenceClient.prototype.send_GetBehaviorReport = function(authentication, configuration, request, callback) {
  this.output.writeMessageBegin('GetBehaviorReport', Thrift.MessageType.CALL, this.seqid);
  var args = new BoxalinoDataIntelligence_GetBehaviorReport_args();
  args.authentication = authentication;
  args.configuration = configuration;
  args.request = request;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

BoxalinoDataIntelligenceClient.prototype.recv_GetBehaviorReport = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new BoxalinoDataIntelligence_GetBehaviorReport_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.e) {
    throw result.e;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'GetBehaviorReport failed: unknown result';
};
